[ { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.size#"
    , "kind"      : "Expression"
    , "type"      : "size# :: KnownNat n => Unsigned n -> Int"
    , "template"  : "to_signed(~LIT[0],~SIZE[~TYPO])"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.pack#"
    , "kind"      : "Expression"
    , "type"      : "pack# :: Unsigned n -> BitVector n"
    , "template"  : "std_logic_vector(~ARG[0])"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.unpack#"
    , "kind"      : "Expression"
    , "type"      : "unpack# :: KnownNat n => BitVector n -> Unsigned n"
    , "template"  : "unsigned(~ARG[1])"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.eq#"
    , "kind"      : "Expression"
    , "type"      : "eq# :: Unsigned n -> Unsigned n -> Bool"
    , "template"  : "~IF~SIZE[~TYP[0]]~THEN~ARG[0] = ~ARG[1]~ELSEtrue~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.neq#"
    , "kind"      : "Expression"
    , "type"      : "neq# :: Unsigned n -> Unsigned n -> Bool"
    , "template"  : "~IF~SIZE[~TYP[0]]~THEN~ARG[0] /= ~ARG[1]~ELSEfalse~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.lt#"
    , "kind"      : "Expression"
    , "type"      : "lt# :: Unsigned n -> Unsigned n -> Bool"
    , "template"  : "~IF~SIZE[~TYP[0]]~THEN~ARG[0] < ~ARG[1]~ELSEfalse~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.ge#"
    , "kind"      : "Expression"
    , "type"      : "ge# :: Unsigned n -> Unsigned n -> Bool"
    , "template"  : "~IF~SIZE[~TYP[0]]~THEN~ARG[0] >= ~ARG[1]~ELSEtrue~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.gt#"
    , "kind"      : "Expression"
    , "type"      : "gt# :: Unsigned n -> Unsigned n -> Bool"
    , "template"  : "~IF~SIZE[~TYP[0]]~THEN~ARG[0] > ~ARG[1]~ELSEfalse~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.le#"
    , "kind"      : "Expression"
    , "type"      : "le# :: Unsigned n -> Unsigned n -> Bool"
    , "template"  : "~IF~SIZE[~TYP[0]]~THEN~ARG[0] <= ~ARG[1]~ELSEtrue~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.minBound#"
    , "kind"      : "Expression"
    , "type"      : "minBound# :: Unsigned n"
    , "template"  : "~IF~SIZE[~TYPO]~THENunsigned'(~SIZE[~TYPO]-1 downto 0 => '0')~ELSEunsigned'(0 downto 1 => '0')~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.maxBound#"
    , "kind"      : "Expression"
    , "type"      : "maxBound# :: KnownNat n => Unsigned n"
    , "template"  : "~IF~SIZE[~TYPO]~THENunsigned'(~LIT[0]-1 downto 0 => '1')~ELSEunsigned'(0 downto 1 => '1')~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.*#"
    , "kind"      : "Expression"
    , "type"      : "(*#) :: KnownNat n => Unsigned n -> Unsigned n -> Unsigned n"
    , "template"  : "resize(~ARG[1] * ~ARG[2], ~LIT[0])"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.negate#"
    , "kind"      : "Expression"
    , "type"      : "negate# :: KnownNat n => Unsigned n -> Unsigned n"
    , "template"  : "unsigned(std_logic_vector(-(signed(std_logic_vector(~ARG[1])))))"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.fromInteger#"
    , "kind"      : "Expression"
    , "type"      : "fromInteger# :: KnownNat n => Integer -> Unsigned n"
    , "template"  : "resize(unsigned(std_logic_vector(~ARG[1])),~LIT[0])"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.plus#"
    , "kind"      : "Expression"
    , "type"      : "plus# :: Unsigned m -> Unsigned n -> Unsigned (1 + Max m n)"
    , "template"  : "~IF~AND[~SIZE[~TYP[0]],~SIZE[~TYP[1]]]~THENresize(~ARG[0],~SIZE[~TYPO]) + resize(~ARG[1],~SIZE[~TYPO])~ELSE~IF~SIZE[~TYP[0]]~THENresize(~ARG[0],~SIZE[~TYPO])~ELSEresize(~ARG[1],~SIZE[~TYPO])~FI~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.minus#"
    , "kind"      : "Expression"
    , "type"      : "minus# :: (KnownNat m,KnownNat n) => Unsigned m -> Unsigned n -> Unsigned (1 + Max m n)"
    , "template"  : "~IF~AND[~SIZE[~TYP[2]],~SIZE[~TYP[3]]]~THENresize(~ARG[2],~SIZE[~TYPO]) - resize(~ARG[3],~SIZE[~TYPO])~ELSE~IF~SIZE[~TYP[2]]~THENresize(~ARG[2],~SIZE[~TYPO])~ELSEresize(~ARG[3],~SIZE[~TYPO])~FI~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.times#"
    , "kind"      : "Expression"
    , "type"      : "times# :: Unsigned m -> Unsigned n -> Unsigned (m + n)"
    , "template"  : "~IF~AND[~SIZE[~TYP[0]],~SIZE[~TYP[1]]]~THEN~ARG[0] * ~ARG[1]~ELSEunsigned'(~SIZE[~TYPO]-1 downto 0 => '0')~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.rem#"
    , "kind"      : "Expression"
    , "type"      : "rem# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "template"  : "~ARG[0] rem ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.toInteger#"
    , "kind"      : "Expression"
    , "type"      : "toInteger# :: Unsigned n -> Integer"
    , "template"  : "~IF~SIZE[~TYP[0]]~THENsigned(std_logic_vector(resize(~ARG[0],~SIZE[~TYPO])))~ELSEto_signed(0,64)~FI"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.and#"
    , "kind"      : "Expression"
    , "type"      : "and# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "template"  : "~ARG[0] and ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.or#"
    , "kind"      : "Expression"
    , "type"      : "or# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "template"  : "~ARG[0] or ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.xor#"
    , "kind"      : "Expression"
    , "type"      : "xor# :: Unsigned n -> Unsigned n -> Unsigned n"
    , "template"  : "~ARG[0] xor ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.complement#"
    , "kind"      : "Expression"
    , "type"      : "complement# :: KnownNat n => Unsigned n -> Unsigned n"
    , "template"  : "not ~ARG[1]"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.shiftL#"
    , "kind"      : "Expression"
    , "type"      : "shiftL# :: KnownNat n => Unsigned n -> Int -> Unsigned n"
    , "template"  : "shift_left(~ARG[1],to_integer(~ARG[2]))"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.shiftR#"
    , "kind"      : "Expression"
    , "type"      : "shiftR# :: KnownNat n => Unsigned n -> Int -> Unsigned n"
    , "template"  : "shift_right(~ARG[1],to_integer(~ARG[2]))"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.rotateL#"
    , "kind"      : "Expression"
    , "type"      : "rotateL# :: KnownNat n => Unsigned n -> Int -> Unsigned n"
    , "template"  : "rotate_left(~ARG[1],to_integer(~ARG[2]))"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.rotateR#"
    , "kind"      : "Expression"
    , "type"      : "rotateR# :: KnownNat n => Unsigned n -> Int -> Unsigned n"
    , "template"  : "rotate_right(~ARG[1],to_integer(~ARG[2]))"
    }
  }
, { "BlackBox" :
    { "name"      : "Clash.Sized.Internal.Unsigned.resize#"
    , "kind"      : "Expression"
    , "type"      : "resize# :: KnownNat m => Unsigned n -> Unsigned m"
    , "template"  : "~IF~SIZE[~TYP[1]]~THENresize(~ARG[1],~LIT[0])~ELSEunsigned'(~SIZE[~TYPO]-1 downto 0 => '0')~FI"
    }
  }
]
